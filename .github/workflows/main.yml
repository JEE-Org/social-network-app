name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          java-version: '19.0.2+7'
          distribution: 'adopt'

      - name: Build and run backend
        run: |
          mvn clean install

        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mydb
          SPRING_DATASOURCE_USERNAME: myuser
          SPRING_DATASOURCE_PASSWORD: mypassword

      - name: Run backend tests
        run: |
          mvn test

      - name: Install Docker CLI
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh

      
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push with script
        run: |
          dir="./"
          for ser in $dir/*; do
            if [ -d "$ser" ] && [ -e "$ser/Dockerfile" ]; then
              ser_name=$(basename $ser)
              ser_name=${ser_name,,}
              docker build -t $ser_name:latest $ser
              docker tag $ser_name:latest ${{ secrets.DOCKERHUB_USERNAME }}/$ser_name:latest
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/$ser_name:latest
            fi
          done

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Build and run frontend
        run: |
          cd front-end/front-end
          npm install
          ng build --configuration=production

      - name: Build and push frontend Docker image
        run: |
          cd front-end/front-end
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
